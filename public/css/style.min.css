*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font:24px/1.5 "Roboto",sans-serif;background:#00ffb3}.news{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.title{text-transform:uppercase}@media (max-width:767px){body{color:#f0f8ff;background-color:#000}.news{display:block}.title{text-align:center}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJzdHlsZS5taW4uY3NzIiwic3R5bGUuY3NzIiwiYmxvY2svbmV3cy5zY3NzIiwiYmxvY2svdGl0bGUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxDLENBQ0MsNkIsQ0NQQyxxQixDRFVGLEksQ0FDQyxpQyxDQUNBLGtCLENFTEQsSyxDRk5DLGUsQ0FTRCxRLENDQ0UsUyxDQUNBLG1CLENDQUEsbUIsQ0FDRixZLENERUUsd0IsQ0VqQkYscUIsQ0FDQyw2QixDQUNBLHdCLENBQ0EscUIsQ0FDQSxrQixDRnFCRCxNLENBQ0Usd0IsQ0FHRix5QkFDRSxJLENDTkYsYSxDRnJCQyxxQixDRXlCQyxLLENBQ0YsYSxDRTVCQyxNLENGZ0NELG1CIiwiZmlsZSI6InN0eWxlLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkYmFzZS1mb250LXNpemU6IDI0cHg7XHJcblxyXG5AbWl4aW4gcGhvbmUtb25seSB7XHJcblx0QG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbioge1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmJvZHkge1xyXG5cdGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAyNTUsIDE3OSk7XHJcblx0Zm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XHJcblx0bGluZS1oZWlnaHQ6IDEuNTtcclxuXHJcblx0QGluY2x1ZGUgcGhvbmUtb25seSB7XHJcblx0XHRjb2xvcjogYWxpY2VibHVlO1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcblx0fVxyXG59XHJcblxyXG5AaW1wb3J0IFwiYmxvY2svbmV3cy5zY3NzXCI7XG5AaW1wb3J0IFwiYmxvY2svdGl0bGUuc2Nzc1wiO1xyXG4iLCIqIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5ib2R5IHtcbiAgZm9udDogMjRweC8xLjUgXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZDogcmdiKDAsIDI1NSwgMTc5KTtcbn1cblxuLm5ld3Mge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4udGl0bGUge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgYm9keSB7XG4gICAgY29sb3I6IGFsaWNlYmx1ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgfVxuXG4gIC5uZXdzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG4gIC50aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59XHJcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkluTjBlV3hsTG5OamMzTWlMQ0p6ZEhsc1pTNWpjM01pTENKaWJHOWpheTl1WlhkekxuTmpjM01pTENKaWJHOWpheTkwYVhSc1pTNXpZM056SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVZGQk8wVkJRME1zT0VKQlFVRTdWVUZCUVN4elFrRkJRVHRCUTFCRU96dEJSRlZCTzBWQlEwTXNaVUZpWjBJN1JVRmphRUlzYTBOQlFVRTdSVUZEUVN4cFEwRkJRVHRGUVVOQkxHZENRVUZCTzBGRFVFUTdRVVJPUXp0RlFWTkVPMGxCVDBVc1owSkJRVUU3U1VGRFFTeDFRa0ZCUVR0RlEwNUJPMEZCUTBZN08wRkRaa0U3UlVGRFF5eG5Ra0ZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzYjBKQlFVRTdSVUZCUVN4dlFrRkJRVHRGUVVGQkxHRkJRVUU3UlVGRFFTeDVRa0ZCUVR0TlFVRkJMSE5DUVVGQk8xVkJRVUVzT0VKQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNiVUpCUVVFN1FVUnJRa1E3UVVSeVFrTTdSVVZJUkR0SlFWTkZMR05CUVVFN1JVUnRRa0U3UVVGRFJqczdRVVUzUWtFN1JVRkRReXg1UWtGQlFUdEJSbWREUkR0QlJEbENRenRGUjBoRU8wbEJTVVVzYTBKQlFVRTdSVVpwUTBFN1FVRkRSaUlzSW1acGJHVWlPaUp6ZEhsc1pTNWpjM01pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJa1ltRnpaUzFtYjI1MExYTnBlbVU2SURJMGNIZzdYSEpjYmx4eVhHNUFiV2w0YVc0Z2NHaHZibVV0YjI1c2VTQjdYSEpjYmx4MFFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJOM0I0S1NCN1hISmNibHgwWEhSQVkyOXVkR1Z1ZER0Y2NseHVYSFI5WEhKY2JuMWNjbHh1WEhKY2Jpb2dlMXh5WEc1Y2RHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEhKY2JuMWNjbHh1WEhKY2JtSnZaSGtnZTF4eVhHNWNkR1p2Ym5RdGMybDZaVG9nSkdKaGMyVXRabTl1ZEMxemFYcGxPMXh5WEc1Y2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklISm5ZaWd3TENBeU5UVXNJREUzT1NrN1hISmNibHgwWm05dWRDMW1ZVzFwYkhrNklGd2lVbTlpYjNSdlhDSXNJSE5oYm5NdGMyVnlhV1k3WEhKY2JseDBiR2x1WlMxb1pXbG5hSFE2SURFdU5UdGNjbHh1WEhKY2JseDBRR2x1WTJ4MVpHVWdjR2h2Ym1VdGIyNXNlU0I3WEhKY2JseDBYSFJqYjJ4dmNqb2dZV3hwWTJWaWJIVmxPMXh5WEc1Y2RGeDBZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZbXhoWTJzN1hISmNibHgwZlZ4eVhHNTlYSEpjYmx4eVhHNUFhVzF3YjNKMElGd2lZbXh2WTJzdmJtVjNjeTV6WTNOelhDSTdYRzVBYVcxd2IzSjBJRndpWW14dlkyc3ZkR2wwYkdVdWMyTnpjMXdpTzF4eVhHNGlMQ0lxSUh0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JuMWNibHh1WW05a2VTQjdYRzRnSUdadmJuUXRjMmw2WlRvZ01qUndlRHRjYmlBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ2NtZGlLREFzSURJMU5Td2dNVGM1S1R0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVVtOWliM1J2WENJc0lITmhibk10YzJWeWFXWTdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhMalU3WEc1OVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dOelkzY0hncElIdGNiaUFnWW05a2VTQjdYRzRnSUNBZ1kyOXNiM0k2SUdGc2FXTmxZbXgxWlR0Y2JpQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJpYkdGamF6dGNiaUFnZlZ4dWZWeHVYRzR1Ym1WM2N5QjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJOM0I0S1NCN1hHNGdJQzV1WlhkeklIdGNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2ZWeHVmVnh1WEc0dWRHbDBiR1VnZTF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVmVnh1UUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURjMk4zQjRLU0I3WEc0Z0lDNTBhWFJzWlNCN1hHNGdJQ0FnZEdWNGRDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQjlYRzU5SWl3aUxtNWxkM01nZTF4eVhHNWNkR3hwYzNRdGMzUjViR1U2SUc1dmJtVTdYSEpjYmx4MGJXRnlaMmx1T2lBd08xeHlYRzVjZEhCaFpHUnBibWM2SURBN1hISmNibHgwWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1WEhScWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYSEpjYmx4MFlXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNqdGNjbHh1WEhKY2JseDBRR2x1WTJ4MVpHVWdjR2h2Ym1VdGIyNXNlU0I3WEhKY2JseDBYSFJrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1WEhSOVhISmNibjFjY2x4dUlpd2lMblJwZEd4bElIdGNjbHh1WEhSMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4eVhHNWNjbHh1WEhSQWFXNWpiSFZrWlNCd2FHOXVaUzF2Ym14NUlIdGNjbHh1WEhSY2RIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1WEhSOVhISmNibjFjY2x4dUlsMTkgKi8iLCIqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDI1NSwgMTc5KTtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgYm9keSB7XG4gICAgY29sb3I6IGFsaWNlYmx1ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgfVxufVxuXG4ubmV3cyB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5uZXdzIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxufVxuXG4udGl0bGUge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC50aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG59IiwiLm5ld3Mge1xyXG5cdGxpc3Qtc3R5bGU6IG5vbmU7XHJcblx0bWFyZ2luOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcblx0QGluY2x1ZGUgcGhvbmUtb25seSB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHR9XHJcbn1cclxuIiwiLnRpdGxlIHtcclxuXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cclxuXHRAaW5jbHVkZSBwaG9uZS1vbmx5IHtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9XHJcbn1cclxuIl19 */